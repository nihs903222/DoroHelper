name: Sync DoroHelper Releases to BaiduYun

on:
  schedule:
    - cron: "0 */6 * * *"  # 每 6 小時檢查一次（UTC 時間）
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: 安裝工具
        run: |
          sudo apt-get update
          sudo apt-get install -y jq wget unzip
          wget -q https://github.com/qjfoidnh/BaiduPCS-Go/releases/download/v3.9.3/BaiduPCS-Go-v3.9.3-linux-amd64.zip
          unzip -q BaiduPCS-Go-v3.9.3-linux-amd64.zip
          chmod +x BaiduPCS-Go-v3.9.3-linux-amd64/BaiduPCS-Go
          sudo mv BaiduPCS-Go-v3.9.3-linux-amd64/BaiduPCS-Go /usr/local/bin/

      - name: 下載最新 release
        run: |
          mkdir -p releases
          latest_tag=$(curl -s https://api.github.com/repos/1204244136/DoroHelper/releases/latest | jq -r .tag_name)
          echo "$latest_tag" > latest_tag.txt
          echo "最新版本: $latest_tag"

          mkdir -p releases/$latest_tag
          assets=$(curl -s https://api.github.com/repos/1204244136/DoroHelper/releases/tags/$latest_tag | jq -r '.assets[].browser_download_url')
          for url in $assets; do
            echo "⬇️ 下載 $url"
            curl -L "$url" -o "releases/$latest_tag/$(basename $url)"
          done

      - name: 上傳至百度雲
        run: |
          BaiduPCS-Go login -cookies="${{ secrets.BAIDU_COOKIES }}"
          TAG=$(cat latest_tag.txt)
          echo "⬆️ 上傳版本 $TAG..."
          BaiduPCS-Go upload "releases" "/Doro_Helper"

      - name: 清理舊版本（保留最近三個）
        run: |
          echo "🧹 清理舊版本，只保留最近三個"
          list=$(./BaiduPCS-Go ls /Doro_Helper | awk '{print $NF}' | sort -r | tail -n +4)
          for old in $list; do
            echo "刪除舊版本：$old"
            BaiduPCS-Go rm -r "/Doro_Helper/$old"
          done
